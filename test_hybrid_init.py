#!/usr/bin/env python3

print("üß™ Probando inicializaci√≥n del modelo h√≠brido...")

# Importar la funci√≥n de inicializaci√≥n
try:
    import truesign_perfect_app
    print("‚úÖ Importaci√≥n exitosa")
    
    # Verificar estado inicial
    print(f"üîç Estado inicial de hybrid_model: {type(truesign_perfect_app.hybrid_model) if truesign_perfect_app.hybrid_model else 'None'}")
    
    # Inicializar modelo h√≠brido
    print("üîÑ Inicializando modelo h√≠brido...")
    result = truesign_perfect_app.initialize_hybrid_model()
    print(f"‚úÖ Resultado de inicializaci√≥n: {result}")
    
    # Verificar estado despu√©s de inicializaci√≥n
    print(f"üîç Estado despu√©s de inicializaci√≥n: {type(truesign_perfect_app.hybrid_model) if truesign_perfect_app.hybrid_model else 'None'}")
    
    if truesign_perfect_app.hybrid_model:
        print("üéØ Probando an√°lisis h√≠brido...")
        test_data = {
            'player_name': 'Franco Mastantuono',
            'market_value': 50000000,
            'age': 18,
            'height': 177,
            'position': 'Forward',
            'nationality': 'Argentina'
        }
        
        result = truesign_perfect_app.hybrid_model.calculate_hybrid_analysis(test_data, 'Barcelona', 30)
        print(f"‚úÖ An√°lisis h√≠brido exitoso")
        print(f"   Precio m√°ximo: ‚Ç¨{result.get('final_price', 0):,.0f}")
        
        cinco_valores = result.get('cinco_valores', {})
        if cinco_valores:
            print("üí∞ CINCO VALORES:")
            for key, value in cinco_valores.items():
                print(f"   {key}: ‚Ç¨{value:,.0f}")
        else:
            print("‚ùå No hay cinco_valores")
    else:
        print("‚ùå Modelo h√≠brido no disponible")
        
except Exception as e:
    print(f"‚ùå Error: {e}")
    import traceback
    traceback.print_exc()
